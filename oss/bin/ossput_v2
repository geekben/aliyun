#!/usr/bin/env python26
#coding=utf-8
import time
import sys
import imp
import commands
import optparse 

#DEBUG = True
DEBUG = False

SOURCE = "/mnt/apachelog/logs/sstlog"

help = \
'''ossput:
    put localfile oss://bucket/object 
    --help, print help message'''

class always_dict (dict):
    def get (self, key, default=None):
        return dict.get(self, key)

class OptionParser(optparse.OptionParser):
     def _create_option_list (self):
         self.option_list = []
         self._short_opt = always_dict()
         self._long_opt = always_dict()
         self._long_opts = []
         self.defaults = {}

def compress_log(rawlog):
    '''
    compress raw log
    '''
    tarball = rawlog + '.gz'
    if os.path.exists(tarball):
        return tarball
    if not os.path.exists(rawlog):
        return
    status = commands.getstatusoutput('gzip -f  %s' % rawlog)
    if not status[0]  == 0:
        print "Error! When compress file %." % rawlog
        sys.exit(1)
    return tarball

def hour(now, number=1):
    '''
    will output the last number file name
    '''
    args = []
    lasthour = now - datetime.timedelta(hours = 1)
    YYYYMMDDHH = lasthour.strftime('%Y%m%d%H')
    YYYYMMDD = lasthour.strftime('%Y%m%d')
    YYYY = lasthour.strftime('%Y')
    MM = lasthour.strftime('%m')
    DD = lasthour.strftime('%d')
    lasthour_log = os.path.join(SOURCE,YYYYMMDD, 'jjjjjjj.'+YYYYMMDDHH+'.log')
    compressed = compress_log(lasthour_log)
    if not compressed:
        print "Please make sure the raw file or compress file exists!"
        sys.exit(1)
    logname = os.path.basename(compressed)
    args.append(compressed)
    args.append(os.path.join('oss://zhuamobsst', YYYY, MM, DD, logname))
    if DEBUG: 
        print "INPUT :"
        print args
        print "End"
    return args

if __name__ == '__main__':
    parser = OptionParser()
    parser.add_option("-H", "--host", dest="host", help="specify oss name")
    parser.add_option("-t", "--timeout", dest="timeout", help="timeout for sign url")
    parser.add_option("-m", "--multi", dest="multi", action="store_true")

    (options, args) = parser.parse_args()
    if len(args) < 1:
        print help 
        sys.exit(1) 

    if args[0] == 'config':
        cmdlists['config'](args, options)

    if args[0] == 'hourly':
        now = datetime.datetime.now()
        args = hour(now, 1)

    cmd = imp.load_source('osscmd','./osscmd')

    cmd.setup_cmdlist()
    cmd.options = options
    cmd.setup_crenditials()
    begin = time.time()
    if options.multi:
        res = cmd.cmdlists['put'](args, options)
    else:
        res = cmd.cmdlists['multiupload'](args, options)
    print_result('put', res)
    end = time.time()
    if DEBUG: sys.stderr.write("%.3f(s) elapsed\n" % (end - begin))

